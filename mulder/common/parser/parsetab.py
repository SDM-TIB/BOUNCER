
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND ASC BOOLEAN BOUND BY BYTE COLON COMA CONSTANT CONTAINS DATATYPE DATETIME DECIMAL DESC DISTINCT DIV DOUBLE EQUALS FILTER FLOAT GREATER GREATEREQ ID INT INTEGER ISBLANK ISIRI ISLITERAL ISURI LANG LANGMATCHES LCASE LESS LESSEQ LIMIT LKEY LONG LPAR MINUS NEG NEGATIVEINT NEQUALS NONNEGINT NONPOSINT NUMBER OFFSET OPTIONAL OR ORDER PLUS POINT POSITIVEINT PREFIX REGEX RKEY RPAR SAMETERM SELECT SHORT STR STRING TIMES UCASE UNION UNSIGNEDBYTE UNSIGNEDINT UNSIGNEDLONG UNSIGNEDSHORT UPPERCASE URI VARIABLE WHERE\n    parse_sparql : prefix_list query order_by limit offset\n    \n    parse_sparql : prefix_list query order_by offset limit\n    \n    prefix_list : prefix prefix_list\n    \n    prefix_list : empty\n    \n    empty :\n    \n    prefix : PREFIX uri\n    \n    uri : ID COLON ID\n    \n    uri : ID COLON URI\n    \n    uri : URI\n    \n    order_by : ORDER BY var_order_list desc_var\n    \n    order_by : empty\n    \n    var_order_list : empty\n    \n    var_order_list : var_order_list desc_var\n    \n    desc_var : DESC LPAR VARIABLE RPAR\n    \n    desc_var : VARIABLE\n    \n    desc_var : ASC LPAR VARIABLE RPAR\n    \n    desc_var : unary_func LPAR desc_var RPAR\n    \n    limit : LIMIT NUMBER\n    \n    limit : empty\n    \n    offset : OFFSET NUMBER\n    \n    offset : empty\n    \n    query : SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY\n    \n    query : SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY\n    \n    distinct : DISTINCT\n    \n    distinct : empty\n    \n    group_graph_pattern : union_block\n    \n    union_block : pjoin_block rest_union_block POINT pjoin_block\n    \n    union_block : pjoin_block rest_union_block pjoin_block\n    \n    union_block : pjoin_block rest_union_block\n    \n    pjoin_block : LKEY join_block RKEY\n    \n    pjoin_block : join_block\n    \n    pjoin_block : empty\n    \n    rest_union_block : empty\n    \n    rest_union_block : UNION LKEY join_block rest_union_block RKEY rest_union_block\n    \n    join_block : LKEY union_block RKEY rest_join_block\n    \n    join_block : bgp rest_join_block\n    \n    rest_join_block : empty\n    \n    rest_join_block : POINT bgp rest_join_block\n    \n    rest_join_block : bgp rest_join_block\n    \n    bgp :  LKEY bgp UNION bgp rest_union_block RKEY\n    \n    bgp : bgp UNION bgp rest_union_block\n    \n    bgp : triple\n    \n    bgp : FILTER LPAR expression RPAR\n    \n    bgp : FILTER express_rel\n    \n    bgp : OPTIONAL LKEY group_graph_pattern RKEY\n    \n    bgp : LKEY join_block RKEY\n    \n    expression : express_rel LOGOP expression\n    \n    expression : express_rel\n    \n    expression : LPAR expression RPAR\n    \n    express_rel : express_arg RELOP express_rel\n    \n    express_rel : express_arg\n    \n    express_rel : LPAR express_rel RPAR\n    \n    express_rel : NEG LPAR expression RPAR\n    \n    express_rel : NEG express_rel\n    \n    express_arg : uri\n    \n    express_arg : VARIABLE\n    \n    express_arg : CONSTANT\n    \n    express_arg : NUMBER\n    \n    express_arg : NUMBER POINT NUMBER\n    \n    express_arg : REGEX LPAR express_arg COMA pattern_arg regex_flag\n    \n    regex_flag : RPAR\n    \n    regex_flag : COMA pattern_arg RPAR\n    \n    pattern_arg : CONSTANT\n    \n    express_arg : binary_func LPAR express_arg COMA express_arg RPAR\n    \n    express_arg : unary_func LPAR express_arg RPAR\n    \n    express_arg : UNARYOP express_arg\n    \n    express_arg : express_arg ARITOP express_arg\n    \n    express_arg : LPAR express_arg RPAR\n    \n    express_arg : express_arg RELOP express_arg\n    \n    ARITOP : PLUS\n    \n    ARITOP : MINUS\n    \n    ARITOP : TIMES\n    \n    ARITOP : DIV\n    \n    UNARYOP : PLUS\n    \n    UNARYOP : MINUS\n    \n    LOGOP : AND\n    \n    LOGOP : OR\n    \n    RELOP : EQUALS\n    \n    RELOP : LESS\n    \n    RELOP : LESSEQ\n    \n    RELOP : GREATER\n    \n    RELOP : GREATEREQ\n    \n    RELOP : NEQUALS\n    \n    binary_func : REGEX\n    \n    binary_func : SAMETERM\n    \n    binary_func : LANGMATCHES\n    \n    binary_func : CONSTANT\n    \n    binary_func : CONTAINS\n    \n    unary_func : BOUND\n    \n    unary_func : ISIRI\n    \n    unary_func : ISURI\n    \n    unary_func : ISBLANK\n    \n    unary_func : ISLITERAL\n    \n    unary_func : LANG\n    \n    unary_func : DATATYPE\n    \n    unary_func : STR\n    \n    unary_func : UPPERCASE\n    \n    unary_func : DOUBLE\n               | INTEGER\n               | DECIMAL\n               | FLOAT\n               | STRING\n               | BOOLEAN\n               | DATETIME\n               | NONPOSINT\n               | NEGATIVEINT\n               | LONG\n               | INT\n               | SHORT\n               | BYTE\n               | NONNEGINT\n               | UNSIGNEDLONG\n               | UNSIGNEDINT\n               | UNSIGNEDSHORT\n               | UNSIGNEDBYTE\n               | POSITIVEINT\n    \n    unary_func : ID COLON ID\n    \n    unary_func : uri\n    \n    unary_func : UCASE\n    \n    unary_func : LCASE\n    \n    var_list : var_list VARIABLE\n    \n    var_list : VARIABLE\n    \n    triple : subject predicate object\n    \n    predicate : ID\n    \n    predicate : uri\n    \n    predicate : VARIABLE\n    \n    subject : uri\n    \n    subject : VARIABLE\n    \n    object : uri\n    \n    object : VARIABLE\n    \n    object : CONSTANT\n    '
    
_lr_action_items = {'LKEY':([11,28,29,39,40,78,79,84,86,88,90,91,93,95,102,103,104,106,108,109,112,113,115,118,126,127,128,129,130,131,136,137,138,143,144,145,146,147,148,150,173,175,177,178,179,180,181,182,183,184,185,187,188,189,190,192,193,195,196,197,199,200,205,210,211,212,213,214,215,218,219,226,227,228,230,235,236,238,239,240,242,],[-9,-8,-7,78,79,84,84,102,106,-42,126,-31,-32,-5,143,126,-31,84,-57,-56,-51,-44,-55,-58,175,126,-36,126,-37,126,-33,184,84,143,126,-31,126,-30,126,-54,-66,143,-5,-39,126,-130,-129,-123,-131,215,84,-30,-5,-35,-45,-51,-50,-67,-7,-59,-68,-52,-43,-31,-46,228,-41,-38,143,-41,-53,-65,-69,215,-40,-5,-64,-60,-61,-34,-62,]),'COMA':([11,28,108,109,115,118,173,195,196,197,198,199,206,226,227,232,233,236,238,239,242,],[-9,-8,-57,-56,-55,-58,-66,-67,-7,-59,221,-68,225,-65,-69,237,-63,-64,-60,-61,-62,]),'LANGMATCHES':([87,107,110,111,121,124,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[119,-75,119,-74,119,119,119,-79,-71,119,-80,-83,119,-82,-72,-70,-73,-78,-81,119,119,119,119,119,119,119,-77,-76,119,119,]),'STRING':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,42,-13,-15,42,42,-75,42,-74,42,42,-16,-14,-17,42,-79,-71,42,-80,-83,42,-82,-72,-70,-73,-78,-81,42,42,42,42,42,42,42,-77,-76,42,42,]),'TIMES':([11,28,108,109,112,115,118,167,173,192,195,196,197,198,199,206,207,209,226,227,231,236,238,239,242,],[-9,-8,-57,-56,159,-55,-58,159,159,159,159,-7,-59,159,-68,159,159,159,-65,159,159,-64,-60,-61,-62,]),'LIMIT':([6,12,13,20,22,30,41,45,125,139,140,141,142,],[-5,-11,23,23,-21,-20,-10,-15,-22,-23,-16,-14,-17,]),'CONSTANT':([11,28,29,87,107,110,111,121,124,132,133,134,135,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,225,237,],[-9,-8,-7,108,-75,108,-74,108,108,183,-126,-125,-124,108,-79,-71,108,-80,-83,108,-82,-72,-70,-73,-78,-81,108,108,108,108,108,108,108,-77,-76,108,108,233,233,]),'BOUND':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,51,-13,-15,51,51,-75,51,-74,51,51,-16,-14,-17,51,-79,-71,51,-80,-83,51,-82,-72,-70,-73,-78,-81,51,51,51,51,51,51,51,-77,-76,51,51,]),'BY':([14,],[24,]),'VARIABLE':([7,11,15,16,17,24,25,26,28,29,36,37,38,41,45,78,79,80,82,83,84,85,87,88,90,91,92,93,94,95,102,103,104,106,107,108,109,110,111,112,113,115,118,121,124,126,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,173,174,175,177,178,179,180,181,182,183,184,185,187,188,189,190,192,193,194,195,196,197,199,200,201,202,203,205,208,210,211,212,213,214,215,218,219,221,226,227,228,230,235,236,238,239,240,242,],[-5,-9,-25,25,-24,-5,-122,38,-8,-7,-12,45,-121,-13,-15,85,85,98,100,45,85,-128,109,-42,85,-31,133,-32,-127,-5,85,85,-31,85,-75,-57,-56,109,-74,-51,-44,-55,-58,109,109,85,85,-36,85,-37,85,180,-126,-125,-124,-33,85,-16,-14,-17,85,85,-31,85,-30,85,-54,109,-79,-71,109,-80,-83,109,-82,-72,-70,-73,-78,-81,109,109,109,109,-66,109,85,-5,-39,85,-130,-129,-123,-131,85,85,-30,-5,-35,-45,-51,-50,109,-67,-7,-59,-68,-52,109,-77,-76,-43,109,-31,-46,85,-41,-38,85,-41,-53,109,-65,-69,85,-40,-5,-64,-60,-61,-34,-62,]),'MINUS':([11,28,87,107,108,109,110,111,112,115,118,121,124,151,152,153,154,155,156,157,158,159,160,161,162,163,166,167,169,171,172,173,174,192,194,195,196,197,198,199,201,202,203,206,207,208,209,221,226,227,231,236,238,239,242,],[-9,-8,107,-75,-57,-56,107,-74,153,-55,-58,107,107,107,-79,-71,107,-80,-83,107,-82,-72,-70,-73,-78,-81,107,153,107,107,107,153,107,153,107,153,-7,-59,153,-68,107,-77,-76,153,153,107,153,107,-65,153,153,-64,-60,-61,-62,]),'ASC':([24,36,37,41,45,83,140,141,142,],[-5,-12,47,-13,-15,47,-16,-14,-17,]),'UNSIGNEDINT':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,53,-13,-15,53,53,-75,53,-74,53,53,-16,-14,-17,53,-79,-71,53,-80,-83,53,-82,-72,-70,-73,-78,-81,53,53,53,53,53,53,53,-77,-76,53,53,]),'UNSIGNEDSHORT':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,54,-13,-15,54,54,-75,54,-74,54,54,-16,-14,-17,54,-79,-71,54,-80,-83,54,-82,-72,-70,-73,-78,-81,54,54,54,54,54,54,54,-77,-76,54,54,]),'OR':([11,28,108,109,112,115,118,150,167,168,173,192,193,195,196,197,199,200,219,222,226,227,236,238,239,242,],[-9,-8,-57,-56,-51,-55,-58,-54,-51,202,-66,-51,-50,-67,-7,-59,-68,-52,-53,202,-65,-69,-64,-60,-61,-62,]),'NEG':([87,110,121,151,152,154,155,156,158,162,163,169,194,201,202,203,],[110,110,110,110,-79,110,-80,-83,-82,-78,-81,110,110,110,-77,-76,]),'NEGATIVEINT':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,70,-13,-15,70,70,-75,70,-74,70,70,-16,-14,-17,70,-79,-71,70,-80,-83,70,-82,-72,-70,-73,-78,-81,70,70,70,70,70,70,70,-77,-76,70,70,]),'PLUS':([11,28,87,107,108,109,110,111,112,115,118,121,124,151,152,153,154,155,156,157,158,159,160,161,162,163,166,167,169,171,172,173,174,192,194,195,196,197,198,199,201,202,203,206,207,208,209,221,226,227,231,236,238,239,242,],[-9,-8,111,-75,-57,-56,111,-74,160,-55,-58,111,111,111,-79,-71,111,-80,-83,111,-82,-72,-70,-73,-78,-81,111,160,111,111,111,160,111,160,111,160,-7,-59,160,-68,111,-77,-76,160,160,111,160,111,-65,160,160,-64,-60,-61,-62,]),'GREATER':([11,28,108,109,112,115,118,167,173,192,195,196,197,198,199,206,207,209,226,227,231,236,238,239,242,],[-9,-8,-57,-56,163,-55,-58,163,163,163,163,-7,-59,163,-68,163,163,163,-65,163,163,-64,-60,-61,-62,]),'ORDER':([6,125,139,],[14,-22,-23,]),'ISLITERAL':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,48,-13,-15,48,48,-75,48,-74,48,48,-16,-14,-17,48,-79,-71,48,-80,-83,48,-82,-72,-70,-73,-78,-81,48,48,48,48,48,48,48,-77,-76,48,48,]),'POSITIVEINT':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,49,-13,-15,49,49,-75,49,-74,49,49,-16,-14,-17,49,-79,-71,49,-80,-83,49,-82,-72,-70,-73,-78,-81,49,49,49,49,49,49,49,-77,-76,49,49,]),'ISURI':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,64,-13,-15,64,64,-75,64,-74,64,64,-16,-14,-17,64,-79,-71,64,-80,-83,64,-82,-72,-70,-73,-78,-81,64,64,64,64,64,64,64,-77,-76,64,64,]),'LANG':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,71,-13,-15,71,71,-75,71,-74,71,71,-16,-14,-17,71,-79,-71,71,-80,-83,71,-82,-72,-70,-73,-78,-81,71,71,71,71,71,71,71,-77,-76,71,71,]),'DATATYPE':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,52,-13,-15,52,52,-75,52,-74,52,52,-16,-14,-17,52,-79,-71,52,-80,-83,52,-82,-72,-70,-73,-78,-81,52,52,52,52,52,52,52,-77,-76,52,52,]),'CONTAINS':([87,107,110,111,121,124,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[114,-75,114,-74,114,114,114,-79,-71,114,-80,-83,114,-82,-72,-70,-73,-78,-81,114,114,114,114,114,114,114,-77,-76,114,114,]),'WHERE':([25,26,27,38,],[-122,39,40,-121,]),'BOOLEAN':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,65,-13,-15,65,65,-75,65,-74,65,65,-16,-14,-17,65,-79,-71,65,-80,-83,65,-82,-72,-70,-73,-78,-81,65,65,65,65,65,65,65,-77,-76,65,65,]),'COLON':([9,57,117,135,],[18,81,164,18,]),'LESSEQ':([11,28,108,109,112,115,118,167,173,192,195,196,197,198,199,206,207,209,226,227,231,236,238,239,242,],[-9,-8,-57,-56,155,-55,-58,155,155,155,155,-7,-59,155,-68,155,155,155,-65,155,155,-64,-60,-61,-62,]),'INTEGER':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,46,-13,-15,46,46,-75,46,-74,46,46,-16,-14,-17,46,-79,-71,46,-80,-83,46,-82,-72,-70,-73,-78,-81,46,46,46,46,46,46,46,-77,-76,46,46,]),'UNSIGNEDLONG':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,44,-13,-15,44,44,-75,44,-74,44,44,-16,-14,-17,44,-79,-71,44,-80,-83,44,-82,-72,-70,-73,-78,-81,44,44,44,44,44,44,44,-77,-76,44,44,]),'DATETIME':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,43,-13,-15,43,43,-75,43,-74,43,43,-16,-14,-17,43,-79,-71,43,-80,-83,43,-82,-72,-70,-73,-78,-81,43,43,43,43,43,43,43,-77,-76,43,43,]),'UNSIGNEDBYTE':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,56,-13,-15,56,56,-75,56,-74,56,56,-16,-14,-17,56,-79,-71,56,-80,-83,56,-82,-72,-70,-73,-78,-81,56,56,56,56,56,56,56,-77,-76,56,56,]),'RKEY':([11,28,29,78,79,84,88,89,90,91,93,95,96,97,102,103,104,105,106,108,109,112,113,115,118,128,129,130,136,138,143,144,145,147,148,149,150,173,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,192,193,195,196,197,199,200,205,210,211,213,214,215,216,217,218,219,226,227,229,230,234,235,236,238,239,240,242,],[-9,-8,-7,-5,-5,-5,-42,125,-5,-31,-32,-5,-26,139,-5,-5,147,148,-5,-57,-56,-51,-44,-55,-58,-36,-5,-37,-33,-5,-5,-5,187,-30,-5,190,-54,-66,-5,211,-5,-39,-5,-130,-129,-123,-131,-5,-28,-30,-5,-35,-45,-51,-50,-67,-7,-59,-68,-52,-43,211,-46,-41,-38,-5,-5,-27,230,-53,-65,-69,235,-40,211,-5,-64,-60,-61,-34,-62,]),'DIV':([11,28,108,109,112,115,118,167,173,192,195,196,197,198,199,206,207,209,226,227,231,236,238,239,242,],[-9,-8,-57,-56,161,-55,-58,161,161,161,161,-7,-59,161,-68,161,161,161,-65,161,161,-64,-60,-61,-62,]),'NUMBER':([19,23,87,107,110,111,121,124,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,169,171,172,174,194,201,202,203,208,221,],[30,35,118,-75,118,-74,118,118,118,-79,-71,118,-80,-83,118,-82,-72,-70,-73,-78,-81,197,118,118,118,118,118,118,118,-77,-76,118,118,]),'SELECT':([0,1,2,4,8,10,11,28,29,],[-5,7,-5,-4,-3,-6,-9,-8,-7,]),'ALL':([7,15,16,17,],[-5,-25,27,-24,]),'UCASE':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,58,-13,-15,58,58,-75,58,-74,58,58,-16,-14,-17,58,-79,-71,58,-80,-83,58,-82,-72,-70,-73,-78,-81,58,58,58,58,58,58,58,-77,-76,58,58,]),'RPAR':([11,28,45,98,100,101,108,109,112,115,118,140,141,142,150,167,168,170,173,191,192,193,195,196,197,199,200,204,207,209,219,220,222,223,224,226,227,231,232,233,236,238,239,241,242,],[-9,-8,-15,140,141,142,-57,-56,-51,-55,-58,-16,-14,-17,-54,199,200,205,-66,219,-51,-50,-67,-7,-59,-68,-52,224,226,199,-53,200,-48,-47,-49,-65,-69,236,239,-63,-64,-60,-61,242,-62,]),'NONPOSINT':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,59,-13,-15,59,59,-75,59,-74,59,59,-16,-14,-17,59,-79,-71,59,-80,-83,59,-82,-72,-70,-73,-78,-81,59,59,59,59,59,59,59,-77,-76,59,59,]),'DOUBLE':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,67,-13,-15,67,67,-75,67,-74,67,67,-16,-14,-17,67,-79,-71,67,-80,-83,67,-82,-72,-70,-73,-78,-81,67,67,67,67,67,67,67,-77,-76,67,67,]),'UNION':([11,28,29,78,79,84,88,90,91,93,95,102,103,104,106,108,109,112,113,115,118,128,129,130,136,143,144,145,147,148,150,173,175,177,178,179,180,181,182,183,187,188,189,190,192,193,195,196,197,199,200,205,210,211,213,214,215,216,218,219,226,227,230,234,235,236,238,239,240,242,],[-9,-8,-7,-5,-5,-5,-42,127,-31,-32,137,-5,146,-31,-5,-57,-56,-51,-44,-55,-58,-36,127,-37,-33,-5,146,-31,-30,-5,-54,-66,-5,212,-39,127,-130,-129,-123,-131,-30,212,-35,-45,-51,-50,-67,-7,-59,-68,-52,-43,-31,-46,-41,-38,-5,137,-41,-53,-65,-69,-40,137,137,-64,-60,-61,-34,-62,]),'INT':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,55,-13,-15,55,55,-75,55,-74,55,55,-16,-14,-17,55,-79,-71,55,-80,-83,55,-82,-72,-70,-73,-78,-81,55,55,55,55,55,55,55,-77,-76,55,55,]),'ISBLANK':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,60,-13,-15,60,60,-75,60,-74,60,60,-16,-14,-17,60,-79,-71,60,-80,-83,60,-82,-72,-70,-73,-78,-81,60,60,60,60,60,60,60,-77,-76,60,60,]),'DESC':([24,36,37,41,45,83,140,141,142,],[-5,-12,72,-13,-15,72,-16,-14,-17,]),'LPAR':([11,28,42,43,44,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,87,99,107,108,110,111,114,115,116,119,120,121,122,123,124,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,196,201,202,203,208,221,],[-9,-8,-102,-104,-112,-99,80,-93,-116,-118,-89,-95,-113,-114,-108,-115,-119,-105,-92,-97,-100,-90,-91,-103,-111,-98,-101,-120,-106,-94,82,-110,-107,83,-109,-96,121,-7,-75,-87,151,-74,-88,-118,-85,-86,166,169,171,172,174,169,-79,-71,194,-80,-83,174,-82,-72,-70,-73,-78,-81,174,169,174,174,174,194,-7,169,-77,-76,174,174,]),'UPPERCASE':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,61,-13,-15,61,61,-75,61,-74,61,61,-16,-14,-17,61,-79,-71,61,-80,-83,61,-82,-72,-70,-73,-78,-81,61,61,61,61,61,61,61,-77,-76,61,61,]),'OPTIONAL':([11,28,29,78,79,84,88,90,91,93,95,102,103,104,106,108,109,112,113,115,118,126,127,128,129,130,131,136,138,143,144,145,146,147,148,150,173,175,177,178,179,180,181,182,183,184,185,187,188,189,190,192,193,195,196,197,199,200,205,210,211,212,213,214,215,218,219,226,227,228,230,235,236,238,239,240,242,],[-9,-8,-7,86,86,86,-42,86,-31,-32,-5,86,86,-31,86,-57,-56,-51,-44,-55,-58,86,86,-36,86,-37,86,-33,86,86,86,-31,86,-30,86,-54,-66,86,-5,-39,86,-130,-129,-123,-131,86,86,-30,-5,-35,-45,-51,-50,-67,-7,-59,-68,-52,-43,-31,-46,86,-41,-38,86,-41,-53,-65,-69,86,-40,-5,-64,-60,-61,-34,-62,]),'FILTER':([11,28,29,78,79,84,88,90,91,93,95,102,103,104,106,108,109,112,113,115,118,126,127,128,129,130,131,136,138,143,144,145,146,147,148,150,173,175,177,178,179,180,181,182,183,184,185,187,188,189,190,192,193,195,196,197,199,200,205,210,211,212,213,214,215,218,219,226,227,228,230,235,236,238,239,240,242,],[-9,-8,-7,87,87,87,-42,87,-31,-32,-5,87,87,-31,87,-57,-56,-51,-44,-55,-58,87,87,-36,87,-37,87,-33,87,87,87,-31,87,-30,87,-54,-66,87,-5,-39,87,-130,-129,-123,-131,87,87,-30,-5,-35,-45,-51,-50,-67,-7,-59,-68,-52,-43,-31,-46,87,-41,-38,87,-41,-53,-65,-69,87,-40,-5,-64,-60,-61,-34,-62,]),'DECIMAL':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,62,-13,-15,62,62,-75,62,-74,62,62,-16,-14,-17,62,-79,-71,62,-80,-83,62,-82,-72,-70,-73,-78,-81,62,62,62,62,62,62,62,-77,-76,62,62,]),'GREATEREQ':([11,28,108,109,112,115,118,167,173,192,195,196,197,198,199,206,207,209,226,227,231,236,238,239,242,],[-9,-8,-57,-56,158,-55,-58,158,158,158,158,-7,-59,158,-68,158,158,158,-65,158,158,-64,-60,-61,-62,]),'ISIRI':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,63,-13,-15,63,63,-75,63,-74,63,63,-16,-14,-17,63,-79,-71,63,-80,-83,63,-82,-72,-70,-73,-78,-81,63,63,63,63,63,63,63,-77,-76,63,63,]),'EQUALS':([11,28,108,109,112,115,118,167,173,192,195,196,197,198,199,206,207,209,226,227,231,236,238,239,242,],[-9,-8,-57,-56,162,-55,-58,162,162,162,162,-7,-59,162,-68,162,162,162,-65,162,162,-64,-60,-61,-62,]),'$end':([3,6,12,13,20,21,22,30,31,32,33,34,35,41,45,125,139,140,141,142,],[0,-5,-11,-5,-5,-5,-19,-20,-2,-19,-1,-21,-18,-10,-15,-22,-23,-16,-14,-17,]),'NONNEGINT':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,66,-13,-15,66,66,-75,66,-74,66,66,-16,-14,-17,66,-79,-71,66,-80,-83,66,-82,-72,-70,-73,-78,-81,66,66,66,66,66,66,66,-77,-76,66,66,]),'LESS':([11,28,108,109,112,115,118,167,173,192,195,196,197,198,199,206,207,209,226,227,231,236,238,239,242,],[-9,-8,-57,-56,152,-55,-58,152,152,152,152,-7,-59,152,-68,152,152,152,-65,152,152,-64,-60,-61,-62,]),'AND':([11,28,108,109,112,115,118,150,167,168,173,192,193,195,196,197,199,200,219,222,226,227,236,238,239,242,],[-9,-8,-57,-56,-51,-55,-58,-54,-51,203,-66,-51,-50,-67,-7,-59,-68,-52,-53,203,-65,-69,-64,-60,-61,-62,]),'PREFIX':([0,2,10,11,28,29,],[5,5,-6,-9,-8,-7,]),'DISTINCT':([7,],[17,]),'FLOAT':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,68,-13,-15,68,68,-75,68,-74,68,68,-16,-14,-17,68,-79,-71,68,-80,-83,68,-82,-72,-70,-73,-78,-81,68,68,68,68,68,68,68,-77,-76,68,68,]),'LCASE':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,69,-13,-15,69,69,-75,69,-74,69,69,-16,-14,-17,69,-79,-71,69,-80,-83,69,-82,-72,-70,-73,-78,-81,69,69,69,69,69,69,69,-77,-76,69,69,]),'REGEX':([87,107,110,111,121,124,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[122,-75,122,-74,122,122,122,-79,-71,122,-80,-83,122,-82,-72,-70,-73,-78,-81,122,122,122,122,122,122,122,-77,-76,122,122,]),'SAMETERM':([87,107,110,111,121,124,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[116,-75,116,-74,116,116,116,-79,-71,116,-80,-83,116,-82,-72,-70,-73,-78,-81,116,116,116,116,116,116,116,-77,-76,116,116,]),'ID':([5,11,18,24,28,29,36,37,41,45,78,79,81,83,84,85,87,88,90,91,92,93,94,95,102,103,104,106,107,108,109,110,111,112,113,115,118,121,124,126,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,171,172,173,174,175,177,178,179,180,181,182,183,184,185,187,188,189,190,192,193,194,195,196,197,199,200,201,202,203,205,208,210,211,212,213,214,215,218,219,221,226,227,228,230,235,236,238,239,240,242,],[9,-9,29,-5,-8,-7,-12,57,-13,-15,9,9,99,57,9,-128,117,-42,9,-31,135,-32,-127,-5,9,9,-31,9,-75,-57,-56,117,-74,-51,-44,-55,-58,117,117,9,9,-36,9,-37,9,9,-126,-125,-124,-33,9,-16,-14,-17,9,9,-31,9,-30,9,-54,117,-79,-71,117,-80,-83,117,-82,-72,-70,-73,-78,-81,196,117,117,117,117,-66,117,9,-5,-39,9,-130,-129,-123,-131,9,9,-30,-5,-35,-45,-51,-50,117,-67,-7,-59,-68,-52,117,-77,-76,-43,117,-31,-46,9,-41,-38,9,-41,-53,117,-65,-69,9,-40,-5,-64,-60,-61,-34,-62,]),'NEQUALS':([11,28,108,109,112,115,118,167,173,192,195,196,197,198,199,206,207,209,226,227,231,236,238,239,242,],[-9,-8,-57,-56,156,-55,-58,156,156,156,156,-7,-59,156,-68,156,156,156,-65,156,156,-64,-60,-61,-62,]),'URI':([5,11,18,24,28,29,36,37,41,45,78,79,81,83,84,85,87,88,90,91,92,93,94,95,102,103,104,106,107,108,109,110,111,112,113,115,118,121,124,126,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,171,172,173,174,175,177,178,179,180,181,182,183,184,185,187,188,189,190,192,193,194,195,196,197,199,200,201,202,203,205,208,210,211,212,213,214,215,218,219,221,226,227,228,230,235,236,238,239,240,242,],[11,-9,28,-5,-8,-7,-12,11,-13,-15,11,11,28,11,11,-128,11,-42,11,-31,11,-32,-127,-5,11,11,-31,11,-75,-57,-56,11,-74,-51,-44,-55,-58,11,11,11,11,-36,11,-37,11,11,-126,-125,-124,-33,11,-16,-14,-17,11,11,-31,11,-30,11,-54,11,-79,-71,11,-80,-83,11,-82,-72,-70,-73,-78,-81,28,11,11,11,11,-66,11,11,-5,-39,11,-130,-129,-123,-131,11,11,-30,-5,-35,-45,-51,-50,11,-67,-7,-59,-68,-52,11,-77,-76,-43,11,-31,-46,11,-41,-38,11,-41,-53,11,-65,-69,11,-40,-5,-64,-60,-61,-34,-62,]),'POINT':([11,28,29,78,79,84,88,90,91,93,95,102,103,104,106,108,109,112,113,115,118,128,129,130,136,138,143,144,145,147,148,150,173,175,177,178,179,180,181,182,183,187,188,189,190,192,193,195,196,197,199,200,205,210,211,213,214,215,218,219,226,227,230,235,236,238,239,240,242,],[-9,-8,-7,-5,-5,-5,-42,131,-31,-32,-5,-5,131,-31,-5,-57,-56,-51,-44,-55,165,-36,131,-37,-33,185,-5,131,-31,-30,131,-54,-66,-5,-5,-39,131,-130,-129,-123,-131,-30,-5,-35,-45,-51,-50,-67,-7,-59,-68,-52,-43,-31,-46,-41,-38,-5,-41,-53,-65,-69,-40,-5,-64,-60,-61,-34,-62,]),'BYTE':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,73,-13,-15,73,73,-75,73,-74,73,73,-16,-14,-17,73,-79,-71,73,-80,-83,73,-82,-72,-70,-73,-78,-81,73,73,73,73,73,73,73,-77,-76,73,73,]),'LONG':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,74,-13,-15,74,74,-75,74,-74,74,74,-16,-14,-17,74,-79,-71,74,-80,-83,74,-82,-72,-70,-73,-78,-81,74,74,74,74,74,74,74,-77,-76,74,74,]),'OFFSET':([6,12,13,21,22,35,41,45,125,139,140,141,142,],[-5,-11,19,19,-19,-18,-10,-15,-22,-23,-16,-14,-17,]),'SHORT':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,76,-13,-15,76,76,-75,76,-74,76,76,-16,-14,-17,76,-79,-71,76,-80,-83,76,-82,-72,-70,-73,-78,-81,76,76,76,76,76,76,76,-77,-76,76,76,]),'STR':([24,36,37,41,45,83,87,107,110,111,121,124,140,141,142,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,171,172,174,194,201,202,203,208,221,],[-5,-12,77,-13,-15,77,77,-75,77,-74,77,77,-16,-14,-17,77,-79,-71,77,-80,-83,77,-82,-72,-70,-73,-78,-81,77,77,77,77,77,77,77,-77,-76,77,77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'limit':([13,20,],[21,31,]),'prefix':([0,2,],[2,2,]),'desc_var':([37,83,],[41,101,]),'order_by':([6,],[13,]),'distinct':([7,],[16,]),'binary_func':([87,110,121,124,151,154,157,166,169,171,172,174,194,201,208,221,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'RELOP':([112,167,173,192,195,198,206,207,209,227,231,],[154,154,208,154,208,208,208,208,208,208,208,]),'join_block':([78,79,84,102,106,126,138,143,175,184,185,215,228,],[91,91,104,145,91,176,91,145,210,216,91,210,234,]),'regex_flag':([232,],[238,]),'bgp':([78,79,84,90,102,103,106,126,127,129,131,138,143,144,146,148,175,179,184,185,212,215,228,],[90,90,103,129,144,129,90,144,177,129,179,90,144,129,188,129,144,129,90,90,177,144,103,]),'prefix_list':([0,2,],[1,8,]),'triple':([78,79,84,90,102,103,106,126,127,129,131,138,143,144,146,148,175,179,184,185,212,215,228,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'group_graph_pattern':([78,79,106,],[89,97,149,]),'LOGOP':([168,222,],[201,201,]),'pattern_arg':([225,237,],[232,241,]),'express_arg':([87,110,121,124,151,154,157,166,169,171,172,174,194,201,208,221,],[112,112,167,173,167,192,195,198,167,206,207,209,167,112,227,231,]),'subject':([78,79,84,90,102,103,106,126,127,129,131,138,143,144,146,148,175,179,184,185,212,215,228,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'predicate':([92,],[132,]),'query':([1,],[6,]),'offset':([13,21,],[20,33,]),'express_rel':([87,110,121,151,154,169,194,201,],[113,150,168,168,193,168,220,222,]),'ARITOP':([112,167,173,192,195,198,206,207,209,227,231,],[157,157,157,157,157,157,157,157,157,157,157,]),'parse_sparql':([0,],[3,]),'empty':([0,2,6,7,13,20,21,24,78,79,84,90,95,102,103,106,129,138,143,144,148,175,177,179,185,188,215,216,234,235,],[4,4,12,15,22,32,34,36,93,93,93,130,136,93,130,93,130,93,93,130,130,93,136,130,93,136,93,136,136,136,]),'rest_union_block':([95,177,188,216,234,235,],[138,213,218,229,229,240,]),'UNARYOP':([87,110,121,124,151,154,157,166,169,171,172,174,194,201,208,221,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'var_list':([16,],[26,]),'rest_join_block':([90,103,129,144,148,179,],[128,128,178,128,189,214,]),'uri':([5,37,78,79,83,84,87,90,92,102,103,106,110,121,124,126,127,129,131,132,138,143,144,146,148,151,154,157,166,169,171,172,174,175,179,184,185,194,201,208,212,215,221,228,],[10,50,94,94,50,94,115,94,134,94,94,94,115,115,115,94,94,94,94,181,94,94,94,94,94,115,115,115,115,115,115,115,115,94,94,94,94,115,115,115,94,94,115,94,]),'unary_func':([37,83,87,110,121,124,151,154,157,166,169,171,172,174,194,201,208,221,],[75,75,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'object':([132,],[182,]),'expression':([121,151,169,201,],[170,191,204,223,]),'pjoin_block':([78,79,84,102,106,138,143,175,185,215,],[95,95,95,95,95,186,95,95,217,95,]),'var_order_list':([24,],[37,]),'union_block':([78,79,84,102,106,143,175,215,],[96,96,105,105,96,105,105,105,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> parse_sparql","S'",1,None,None,None),
  ('parse_sparql -> prefix_list query order_by limit offset','parse_sparql',5,'p_parse_sparql_0','queryParser.py',162),
  ('parse_sparql -> prefix_list query order_by offset limit','parse_sparql',5,'p_parse_sparql_1','queryParser.py',169),
  ('prefix_list -> prefix prefix_list','prefix_list',2,'p_prefix_list','queryParser.py',176),
  ('prefix_list -> empty','prefix_list',1,'p_empty_prefix_list','queryParser.py',182),
  ('empty -> <empty>','empty',0,'p_empty','queryParser.py',188),
  ('prefix -> PREFIX uri','prefix',2,'p_prefix','queryParser.py',194),
  ('uri -> ID COLON ID','uri',3,'p_uri_0','queryParser.py',200),
  ('uri -> ID COLON URI','uri',3,'p_uri_1','queryParser.py',206),
  ('uri -> URI','uri',1,'p_uri_2','queryParser.py',212),
  ('order_by -> ORDER BY var_order_list desc_var','order_by',4,'p_order_by_0','queryParser.py',218),
  ('order_by -> empty','order_by',1,'p_order_by_1','queryParser.py',224),
  ('var_order_list -> empty','var_order_list',1,'p_var_order_list_0','queryParser.py',230),
  ('var_order_list -> var_order_list desc_var','var_order_list',2,'p_var_order_list_1','queryParser.py',236),
  ('desc_var -> DESC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_0','queryParser.py',242),
  ('desc_var -> VARIABLE','desc_var',1,'p_desc_var_1','queryParser.py',248),
  ('desc_var -> ASC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_2','queryParser.py',254),
  ('desc_var -> unary_func LPAR desc_var RPAR','desc_var',4,'p_desc_var_3','queryParser.py',260),
  ('limit -> LIMIT NUMBER','limit',2,'p_limit_0','queryParser.py',266),
  ('limit -> empty','limit',1,'p_limit_1','queryParser.py',272),
  ('offset -> OFFSET NUMBER','offset',2,'p_offset_0','queryParser.py',278),
  ('offset -> empty','offset',1,'p_offset_1','queryParser.py',284),
  ('query -> SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_0','queryParser.py',290),
  ('query -> SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_1','queryParser.py',296),
  ('distinct -> DISTINCT','distinct',1,'p_distinct_0','queryParser.py',302),
  ('distinct -> empty','distinct',1,'p_distinct_1','queryParser.py',308),
  ('group_graph_pattern -> union_block','group_graph_pattern',1,'p_ggp_0','queryParser.py',314),
  ('union_block -> pjoin_block rest_union_block POINT pjoin_block','union_block',4,'p_union_block_0','queryParser.py',320),
  ('union_block -> pjoin_block rest_union_block pjoin_block','union_block',3,'p_union_block_1','queryParser.py',328),
  ('union_block -> pjoin_block rest_union_block','union_block',2,'p_union_block_2','queryParser.py',339),
  ('pjoin_block -> LKEY join_block RKEY','pjoin_block',3,'p_ppjoin_block_0','queryParser.py',345),
  ('pjoin_block -> join_block','pjoin_block',1,'p_ppjoin_block_1','queryParser.py',351),
  ('pjoin_block -> empty','pjoin_block',1,'p_ppjoin_block_2','queryParser.py',357),
  ('rest_union_block -> empty','rest_union_block',1,'p_rest_union_block_0','queryParser.py',363),
  ('rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block','rest_union_block',6,'p_rest_union_block_1','queryParser.py',369),
  ('join_block -> LKEY union_block RKEY rest_join_block','join_block',4,'p_join_block_0','queryParser.py',376),
  ('join_block -> bgp rest_join_block','join_block',2,'p_join_block_1','queryParser.py',387),
  ('rest_join_block -> empty','rest_join_block',1,'p_rest_join_block_0','queryParser.py',393),
  ('rest_join_block -> POINT bgp rest_join_block','rest_join_block',3,'p_rest_join_block_1','queryParser.py',399),
  ('rest_join_block -> bgp rest_join_block','rest_join_block',2,'p_rest_join_block_2','queryParser.py',405),
  ('bgp -> LKEY bgp UNION bgp rest_union_block RKEY','bgp',6,'p_bgp_0','queryParser.py',411),
  ('bgp -> bgp UNION bgp rest_union_block','bgp',4,'p_bgp_01','queryParser.py',418),
  ('bgp -> triple','bgp',1,'p_bgp_1','queryParser.py',426),
  ('bgp -> FILTER LPAR expression RPAR','bgp',4,'p_bgp_2','queryParser.py',432),
  ('bgp -> FILTER express_rel','bgp',2,'p_bgp_3','queryParser.py',438),
  ('bgp -> OPTIONAL LKEY group_graph_pattern RKEY','bgp',4,'p_bgp_4','queryParser.py',444),
  ('bgp -> LKEY join_block RKEY','bgp',3,'p_bgp_6','queryParser.py',457),
  ('expression -> express_rel LOGOP expression','expression',3,'p_expression_0','queryParser.py',466),
  ('expression -> express_rel','expression',1,'p_expression_1','queryParser.py',472),
  ('expression -> LPAR expression RPAR','expression',3,'p_expression_2','queryParser.py',478),
  ('express_rel -> express_arg RELOP express_rel','express_rel',3,'p_express_rel_0','queryParser.py',484),
  ('express_rel -> express_arg','express_rel',1,'p_express_rel_1','queryParser.py',490),
  ('express_rel -> LPAR express_rel RPAR','express_rel',3,'p_express_rel_2','queryParser.py',496),
  ('express_rel -> NEG LPAR expression RPAR','express_rel',4,'p_express_rel_3','queryParser.py',502),
  ('express_rel -> NEG express_rel','express_rel',2,'p_express_rel_4','queryParser.py',508),
  ('express_arg -> uri','express_arg',1,'p_express_arg_0','queryParser.py',515),
  ('express_arg -> VARIABLE','express_arg',1,'p_express_arg_1','queryParser.py',521),
  ('express_arg -> CONSTANT','express_arg',1,'p_express_arg_2','queryParser.py',527),
  ('express_arg -> NUMBER','express_arg',1,'p_express_arg_3','queryParser.py',538),
  ('express_arg -> NUMBER POINT NUMBER','express_arg',3,'p_express_arg_03','queryParser.py',544),
  ('express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag','express_arg',6,'p_express_arg_4','queryParser.py',552),
  ('regex_flag -> RPAR','regex_flag',1,'p_regex_flags_0','queryParser.py',558),
  ('regex_flag -> COMA pattern_arg RPAR','regex_flag',3,'p_regex_flags_1','queryParser.py',564),
  ('pattern_arg -> CONSTANT','pattern_arg',1,'p_pattern_arg_0','queryParser.py',570),
  ('express_arg -> binary_func LPAR express_arg COMA express_arg RPAR','express_arg',6,'p_express_arg_5','queryParser.py',577),
  ('express_arg -> unary_func LPAR express_arg RPAR','express_arg',4,'p_express_arg_6','queryParser.py',583),
  ('express_arg -> UNARYOP express_arg','express_arg',2,'p_express_arg_7','queryParser.py',589),
  ('express_arg -> express_arg ARITOP express_arg','express_arg',3,'p_express_arg_8','queryParser.py',596),
  ('express_arg -> LPAR express_arg RPAR','express_arg',3,'p_express_arg_9','queryParser.py',602),
  ('express_arg -> express_arg RELOP express_arg','express_arg',3,'p_express_arg_10','queryParser.py',608),
  ('ARITOP -> PLUS','ARITOP',1,'p_arit_op_0','queryParser.py',614),
  ('ARITOP -> MINUS','ARITOP',1,'p_arit_op_1','queryParser.py',620),
  ('ARITOP -> TIMES','ARITOP',1,'p_arit_op_2','queryParser.py',626),
  ('ARITOP -> DIV','ARITOP',1,'p_arit_op_3','queryParser.py',632),
  ('UNARYOP -> PLUS','UNARYOP',1,'p_unaryarit_op_1','queryParser.py',638),
  ('UNARYOP -> MINUS','UNARYOP',1,'p_unaryarit_op_2','queryParser.py',644),
  ('LOGOP -> AND','LOGOP',1,'p_logical_op_0','queryParser.py',650),
  ('LOGOP -> OR','LOGOP',1,'p_logical_op_1','queryParser.py',656),
  ('RELOP -> EQUALS','RELOP',1,'p_relational_op_0','queryParser.py',662),
  ('RELOP -> LESS','RELOP',1,'p_relational_op_1','queryParser.py',668),
  ('RELOP -> LESSEQ','RELOP',1,'p_relational_op_2','queryParser.py',674),
  ('RELOP -> GREATER','RELOP',1,'p_relational_op_3','queryParser.py',680),
  ('RELOP -> GREATEREQ','RELOP',1,'p_relational_op_4','queryParser.py',686),
  ('RELOP -> NEQUALS','RELOP',1,'p_relational_op_5','queryParser.py',692),
  ('binary_func -> REGEX','binary_func',1,'p_binary_0','queryParser.py',698),
  ('binary_func -> SAMETERM','binary_func',1,'p_binary_1','queryParser.py',704),
  ('binary_func -> LANGMATCHES','binary_func',1,'p_binary_2','queryParser.py',710),
  ('binary_func -> CONSTANT','binary_func',1,'p_binary_3','queryParser.py',716),
  ('binary_func -> CONTAINS','binary_func',1,'p_binary_4','queryParser.py',722),
  ('unary_func -> BOUND','unary_func',1,'p_unary_0','queryParser.py',728),
  ('unary_func -> ISIRI','unary_func',1,'p_unary_1','queryParser.py',734),
  ('unary_func -> ISURI','unary_func',1,'p_unary_2','queryParser.py',740),
  ('unary_func -> ISBLANK','unary_func',1,'p_unary_3','queryParser.py',746),
  ('unary_func -> ISLITERAL','unary_func',1,'p_unary_4','queryParser.py',752),
  ('unary_func -> LANG','unary_func',1,'p_unary_5','queryParser.py',758),
  ('unary_func -> DATATYPE','unary_func',1,'p_unary_6','queryParser.py',764),
  ('unary_func -> STR','unary_func',1,'p_unary_7','queryParser.py',770),
  ('unary_func -> UPPERCASE','unary_func',1,'p_unary_8','queryParser.py',776),
  ('unary_func -> DOUBLE','unary_func',1,'p_unary_9','queryParser.py',782),
  ('unary_func -> INTEGER','unary_func',1,'p_unary_9','queryParser.py',783),
  ('unary_func -> DECIMAL','unary_func',1,'p_unary_9','queryParser.py',784),
  ('unary_func -> FLOAT','unary_func',1,'p_unary_9','queryParser.py',785),
  ('unary_func -> STRING','unary_func',1,'p_unary_9','queryParser.py',786),
  ('unary_func -> BOOLEAN','unary_func',1,'p_unary_9','queryParser.py',787),
  ('unary_func -> DATETIME','unary_func',1,'p_unary_9','queryParser.py',788),
  ('unary_func -> NONPOSINT','unary_func',1,'p_unary_9','queryParser.py',789),
  ('unary_func -> NEGATIVEINT','unary_func',1,'p_unary_9','queryParser.py',790),
  ('unary_func -> LONG','unary_func',1,'p_unary_9','queryParser.py',791),
  ('unary_func -> INT','unary_func',1,'p_unary_9','queryParser.py',792),
  ('unary_func -> SHORT','unary_func',1,'p_unary_9','queryParser.py',793),
  ('unary_func -> BYTE','unary_func',1,'p_unary_9','queryParser.py',794),
  ('unary_func -> NONNEGINT','unary_func',1,'p_unary_9','queryParser.py',795),
  ('unary_func -> UNSIGNEDLONG','unary_func',1,'p_unary_9','queryParser.py',796),
  ('unary_func -> UNSIGNEDINT','unary_func',1,'p_unary_9','queryParser.py',797),
  ('unary_func -> UNSIGNEDSHORT','unary_func',1,'p_unary_9','queryParser.py',798),
  ('unary_func -> UNSIGNEDBYTE','unary_func',1,'p_unary_9','queryParser.py',799),
  ('unary_func -> POSITIVEINT','unary_func',1,'p_unary_9','queryParser.py',800),
  ('unary_func -> ID COLON ID','unary_func',3,'p_unary_10','queryParser.py',806),
  ('unary_func -> uri','unary_func',1,'p_unary_11','queryParser.py',812),
  ('unary_func -> UCASE','unary_func',1,'p_unary_12','queryParser.py',818),
  ('unary_func -> LCASE','unary_func',1,'p_unary_13','queryParser.py',824),
  ('var_list -> var_list VARIABLE','var_list',2,'p_var_list','queryParser.py',830),
  ('var_list -> VARIABLE','var_list',1,'p_single_var_list','queryParser.py',836),
  ('triple -> subject predicate object','triple',3,'p_triple_0','queryParser.py',842),
  ('predicate -> ID','predicate',1,'p_predicate_rdftype','queryParser.py',848),
  ('predicate -> uri','predicate',1,'p_predicate_uri','queryParser.py',861),
  ('predicate -> VARIABLE','predicate',1,'p_predicate_var','queryParser.py',867),
  ('subject -> uri','subject',1,'p_subject_uri','queryParser.py',874),
  ('subject -> VARIABLE','subject',1,'p_subject_variable','queryParser.py',880),
  ('object -> uri','object',1,'p_object_uri','queryParser.py',886),
  ('object -> VARIABLE','object',1,'p_object_variable','queryParser.py',892),
  ('object -> CONSTANT','object',1,'p_object_constant','queryParser.py',898),
]
