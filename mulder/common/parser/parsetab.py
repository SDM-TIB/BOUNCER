
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CONSTANT NUMBER VARIABLE LKEY RKEY COLON POINT COMA URI ALL LPAR RPAR EQUALS NEQUALS LESS LESSEQ GREATER GREATEREQ ID NEG AND PLUS MINUS TIMES DIV DOUBLE INTEGER DECIMAL FLOAT STRING BOOLEAN DATETIME NONPOSINT NEGATIVEINT LONG INT SHORT BYTE NONNEGINT UNSIGNEDLONG UNSIGNEDINT UNSIGNEDSHORT UNSIGNEDBYTE POSITIVEINT OR DISTINCT ISLITERAL DATATYPE DESC UNION ISBLANK ASC CONTAINS REGEX BY ISIRI UCASE OFFSET BOUND UPPERCASE STR WHERE SAMETERM FILTER ISURI OPTIONAL LIMIT ORDER PREFIX LCASE SELECT LANGMATCHES LANG\n    parse_sparql : prefix_list query order_by limit offset\n    \n    parse_sparql : prefix_list query order_by offset limit\n    \n    prefix_list : prefix prefix_list\n    \n    prefix_list : empty\n    \n    empty :\n    \n    prefix : PREFIX uri\n    \n    uri : ID COLON ID\n    \n    uri : ID COLON URI\n    \n    uri : URI\n    \n    order_by : ORDER BY var_order_list desc_var\n    \n    order_by : empty\n    \n    var_order_list : empty\n    \n    var_order_list : var_order_list desc_var\n    \n    desc_var : DESC LPAR VARIABLE RPAR\n    \n    desc_var : VARIABLE\n    \n    desc_var : ASC LPAR VARIABLE RPAR\n    \n    desc_var : unary_func LPAR desc_var RPAR\n    \n    limit : LIMIT NUMBER\n    \n    limit : empty\n    \n    offset : OFFSET NUMBER\n    \n    offset : empty\n    \n    query : SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY\n    \n    query : SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY\n    \n    distinct : DISTINCT\n    \n    distinct : empty\n    \n    group_graph_pattern : union_block\n    \n    union_block : pjoin_block rest_union_block POINT pjoin_block\n    \n    union_block : pjoin_block rest_union_block pjoin_block\n    \n    union_block : pjoin_block rest_union_block\n    \n    pjoin_block : LKEY join_block RKEY\n    \n    pjoin_block : join_block\n    \n    pjoin_block : empty\n    \n    rest_union_block : empty\n    \n    rest_union_block : UNION LKEY join_block rest_union_block RKEY rest_union_block\n    \n    join_block : LKEY union_block RKEY rest_join_block\n    \n    join_block : bgp rest_join_block\n    \n    rest_join_block : empty\n    \n    rest_join_block : POINT bgp rest_join_block\n    \n    rest_join_block : bgp rest_join_block\n    \n    bgp :  LKEY bgp UNION bgp rest_union_block RKEY\n    \n    bgp : bgp UNION bgp rest_union_block\n    \n    bgp : triple\n    \n    bgp : FILTER LPAR expression RPAR\n    \n    bgp : FILTER express_rel\n    \n    bgp : OPTIONAL LKEY group_graph_pattern RKEY\n    \n    bgp : LKEY join_block RKEY\n    \n    expression : express_rel LOGOP expression\n    \n    expression : express_rel\n    \n    expression : LPAR expression RPAR\n    \n    express_rel : express_arg RELOP express_rel\n    \n    express_rel : express_arg\n    \n    express_rel : LPAR express_rel RPAR\n    \n    express_rel : NEG LPAR expression RPAR\n    \n    express_rel : NEG express_rel\n    \n    express_arg : uri\n    \n    express_arg : VARIABLE\n    \n    express_arg : CONSTANT\n    \n    express_arg : NUMBER\n    \n    express_arg : NUMBER POINT NUMBER\n    \n    express_arg : REGEX LPAR express_arg COMA pattern_arg regex_flag\n    \n    regex_flag : RPAR\n    \n    regex_flag : COMA pattern_arg RPAR\n    \n    pattern_arg : CONSTANT\n    \n    express_arg : binary_func LPAR express_arg COMA express_arg RPAR\n    \n    express_arg : unary_func LPAR express_arg RPAR\n    \n    express_arg : UNARYOP express_arg\n    \n    express_arg : express_arg ARITOP express_arg\n    \n    express_arg : LPAR express_arg RPAR\n    \n    express_arg : express_arg RELOP express_arg\n    \n    ARITOP : PLUS\n    \n    ARITOP : MINUS\n    \n    ARITOP : TIMES\n    \n    ARITOP : DIV\n    \n    UNARYOP : PLUS\n    \n    UNARYOP : MINUS\n    \n    LOGOP : AND\n    \n    LOGOP : OR\n    \n    RELOP : EQUALS\n    \n    RELOP : LESS\n    \n    RELOP : LESSEQ\n    \n    RELOP : GREATER\n    \n    RELOP : GREATEREQ\n    \n    RELOP : NEQUALS\n    \n    binary_func : REGEX\n    \n    binary_func : SAMETERM\n    \n    binary_func : LANGMATCHES\n    \n    binary_func : CONSTANT\n    \n    binary_func : CONTAINS\n    \n    unary_func : BOUND\n    \n    unary_func : ISIRI\n    \n    unary_func : ISURI\n    \n    unary_func : ISBLANK\n    \n    unary_func : ISLITERAL\n    \n    unary_func : LANG\n    \n    unary_func : DATATYPE\n    \n    unary_func : STR\n    \n    unary_func : UPPERCASE\n    \n    unary_func : DOUBLE\n               | INTEGER\n               | DECIMAL\n               | FLOAT\n               | STRING\n               | BOOLEAN\n               | DATETIME\n               | NONPOSINT\n               | NEGATIVEINT\n               | LONG\n               | INT\n               | SHORT\n               | BYTE\n               | NONNEGINT\n               | UNSIGNEDLONG\n               | UNSIGNEDINT\n               | UNSIGNEDSHORT\n               | UNSIGNEDBYTE\n               | POSITIVEINT\n    \n    unary_func : ID COLON ID\n    \n    unary_func : uri\n    \n    unary_func : UCASE\n    \n    unary_func : LCASE\n    \n    var_list : var_list VARIABLE\n    \n    var_list : VARIABLE\n    \n    triple : subject predicate object\n    \n    predicate : ID\n    \n    predicate : uri\n    \n    predicate : VARIABLE\n    \n    subject : uri\n    \n    subject : VARIABLE\n    \n    object : uri\n    \n    object : VARIABLE\n    \n    object : CONSTANT\n    '
    
_lr_action_items = {'ISLITERAL':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,57,-13,-15,57,57,57,57,57,-75,-74,57,57,57,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,57,57,57,57,57,-16,-17,-14,57,-76,57,-77,57,57,]),'BYTE':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,76,-13,-15,76,76,76,76,76,-75,-74,76,76,76,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,76,76,76,76,76,-16,-17,-14,76,-76,76,-77,76,76,]),'LANGMATCHES':([87,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,191,194,196,197,199,226,],[111,111,111,111,-75,-74,111,111,111,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,111,111,111,111,111,111,-76,111,-77,111,111,]),'RPAR':([8,20,77,109,112,114,122,124,136,137,138,151,153,154,155,170,184,185,186,190,192,193,195,200,201,202,203,204,205,207,219,220,221,222,223,224,225,231,232,233,236,238,239,241,242,],[-9,-8,-15,-57,-51,-55,-58,-56,184,185,186,-66,193,195,198,-54,-16,-17,-14,193,220,-68,-52,-51,-50,-67,224,225,-7,-59,-69,-49,-48,-47,195,-65,-53,236,-63,238,-64,-61,-60,242,-62,]),'LPAR':([8,20,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,78,79,87,107,108,109,110,111,113,114,115,117,118,119,121,123,139,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,191,194,196,197,199,205,226,],[-9,-8,-95,-106,94,-99,-108,-113,-119,-98,-111,-114,-89,-97,-109,-93,-112,95,-118,-105,-100,-91,96,-116,-92,-104,-96,-101,-107,-90,-120,-115,-102,-110,-94,-103,110,150,-85,-87,152,-86,168,-118,169,-88,-75,-74,172,174,-7,150,152,199,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,150,150,152,150,150,150,-76,152,-77,199,-7,150,]),'ASC':([29,39,40,43,77,95,184,185,186,],[-5,-12,46,-13,-15,46,-16,-17,-14,]),'REGEX':([87,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,191,194,196,197,199,226,],[123,123,123,123,-75,-74,123,123,123,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,123,123,123,123,123,123,-76,123,-77,123,123,]),'INTEGER':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,47,-13,-15,47,47,47,47,47,-75,-74,47,47,47,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,47,47,47,47,47,-16,-17,-14,47,-76,47,-77,47,47,]),'PLUS':([8,20,87,107,109,110,112,114,115,118,119,122,124,150,151,152,153,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,190,191,193,194,196,197,199,200,202,203,205,206,207,208,219,224,226,231,236,238,239,242,],[-9,-8,119,119,-57,119,163,-55,119,-75,-74,-58,-56,119,163,119,163,119,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,119,119,119,119,119,163,119,-68,-76,119,-77,119,163,163,163,-7,163,-59,163,163,-65,119,163,-64,-61,-60,-62,]),'LIMIT':([11,16,17,25,28,34,43,77,106,135,184,185,186,],[-5,24,-11,-21,24,-20,-10,-15,-23,-22,-16,-17,-14,]),'UNSIGNEDINT':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,49,-13,-15,49,49,49,49,49,-75,-74,49,49,49,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,49,49,49,49,49,-16,-17,-14,49,-76,49,-77,49,49,]),'POSITIVEINT':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,65,-13,-15,65,65,65,65,65,-75,-74,65,65,65,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,65,65,65,65,65,-16,-17,-14,65,-76,65,-77,65,65,]),'UCASE':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,50,-13,-15,50,50,50,50,50,-75,-74,50,50,50,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,50,50,50,50,50,-16,-17,-14,50,-76,50,-77,50,50,]),'LESSEQ':([8,20,109,112,114,122,124,151,153,190,193,200,202,203,205,206,207,208,219,224,231,236,238,239,242,],[-9,-8,-57,165,-55,-58,-56,165,165,165,-68,165,165,165,-7,165,-59,165,165,-65,165,-64,-61,-60,-62,]),'DOUBLE':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,51,-13,-15,51,51,51,51,51,-75,-74,51,51,51,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,51,51,51,51,51,-16,-17,-14,51,-76,51,-77,51,51,]),'TIMES':([8,20,109,112,114,122,124,151,153,190,193,200,202,203,205,206,207,208,219,224,231,236,238,239,242,],[-9,-8,-57,158,-55,-58,-56,158,158,158,-68,158,158,158,-7,158,-59,158,158,-65,158,-64,-61,-60,-62,]),'RKEY':([8,19,20,41,42,80,81,84,85,89,90,91,92,93,98,99,100,101,109,112,114,116,122,124,125,126,129,130,132,134,140,141,142,144,145,146,147,148,149,151,170,175,176,177,178,179,180,182,183,187,188,189,193,195,198,200,201,202,205,207,209,211,212,213,214,215,216,217,218,219,224,225,229,230,234,235,236,238,239,240,242,],[-9,-7,-8,-5,-5,-5,-42,-32,106,-5,-5,-31,-26,135,-5,-5,144,145,-57,-51,-55,-44,-58,-56,-5,-36,-37,-5,-33,-5,-5,-5,187,-30,-5,-123,-131,-130,-129,-66,-54,209,-5,-5,213,-39,-5,-28,-5,-30,-5,-35,-68,-52,-43,-51,-50,-67,-7,-59,-45,-41,213,-46,-38,-5,-5,-27,230,-69,-65,-53,235,-40,213,-5,-64,-61,-60,-34,-62,]),'POINT':([8,19,20,41,42,80,81,84,89,90,91,98,99,100,109,112,114,116,122,124,125,126,129,130,132,134,140,141,142,144,145,146,147,148,149,151,170,176,177,179,180,187,188,189,193,195,198,200,201,202,205,207,209,211,212,213,214,215,218,219,224,225,230,235,236,238,239,240,242,],[-9,-7,-8,-5,-5,-5,-42,-32,131,-5,-31,-5,131,-31,-57,-51,-55,-44,173,-56,-5,-36,-37,131,-33,183,-5,131,-31,-30,131,-123,-131,-130,-129,-66,-54,-5,-5,-39,131,-30,-5,-35,-68,-52,-43,-51,-50,-67,-7,-59,-45,-41,-31,-46,-38,-5,-41,-69,-65,-53,-40,-5,-64,-61,-60,-34,-62,]),'UPPERCASE':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,55,-13,-15,55,55,55,55,55,-75,-74,55,55,55,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,55,55,55,55,55,-16,-17,-14,55,-76,55,-77,55,55,]),'BOUND':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,54,-13,-15,54,54,54,54,54,-75,-74,54,54,54,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,54,54,54,54,54,-16,-17,-14,54,-76,54,-77,54,54,]),'WHERE':([21,22,23,32,],[30,-122,31,-121,]),'COMA':([8,20,109,114,122,124,151,193,202,205,206,207,208,219,224,232,233,236,238,239,242,],[-9,-8,-57,-55,-58,-56,-66,-68,-67,-7,226,-59,227,-69,-65,-63,237,-64,-61,-60,-62,]),'OFFSET':([11,16,17,25,27,33,43,77,106,135,184,185,186,],[-5,26,-11,-19,26,-18,-10,-15,-23,-22,-16,-17,-14,]),'FILTER':([8,19,20,41,42,80,81,84,89,90,91,98,99,100,109,112,114,116,122,124,125,126,127,128,129,130,131,132,134,140,141,142,143,144,145,146,147,148,149,151,170,176,177,179,180,181,183,187,188,189,193,195,198,200,201,202,205,207,209,210,211,212,213,214,215,218,219,224,225,228,230,235,236,238,239,240,242,],[-9,-7,-8,87,87,87,-42,-32,87,-5,-31,87,87,-31,-57,-51,-55,-44,-58,-56,87,-36,87,87,-37,87,87,-33,87,87,87,-31,87,-30,87,-123,-131,-130,-129,-66,-54,-5,87,-39,87,87,87,-30,-5,-35,-68,-52,-43,-51,-50,-67,-7,-59,-45,87,-41,-31,-46,-38,87,-41,-69,-65,-53,87,-40,-5,-64,-61,-60,-34,-62,]),'DATATYPE':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,44,-13,-15,44,44,44,44,44,-75,-74,44,44,44,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,44,44,44,44,44,-16,-17,-14,44,-76,44,-77,44,44,]),'CONSTANT':([8,19,20,87,102,103,104,105,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,191,194,196,197,199,226,227,237,],[-9,-7,-8,109,-124,-126,-125,147,109,109,109,-75,-74,109,109,109,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,109,109,109,109,109,109,-76,109,-77,109,109,232,232,]),'UNSIGNEDSHORT':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,53,-13,-15,53,53,53,53,53,-75,-74,53,53,53,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,53,53,53,53,53,-16,-17,-14,53,-76,53,-77,53,53,]),'OR':([8,20,109,112,114,122,124,151,153,154,170,193,195,200,201,202,205,207,219,221,224,225,236,238,239,242,],[-9,-8,-57,-51,-55,-58,-56,-66,-51,197,-54,-68,-52,-51,-50,-67,-7,-59,-69,197,-65,-53,-64,-61,-60,-62,]),'SHORT':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,56,-13,-15,56,56,56,56,56,-75,-74,56,56,56,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,56,56,56,56,56,-16,-17,-14,56,-76,56,-77,56,56,]),'ORDER':([11,106,135,],[18,-23,-22,]),'UNSIGNEDLONG':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,58,-13,-15,58,58,58,58,58,-75,-74,58,58,58,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,58,58,58,58,58,-16,-17,-14,58,-76,58,-77,58,58,]),'PREFIX':([0,2,7,8,19,20,],[1,1,-6,-9,-7,-8,]),'NEGATIVEINT':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,45,-13,-15,45,45,45,45,45,-75,-74,45,45,45,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,45,45,45,45,45,-16,-17,-14,45,-76,45,-77,45,45,]),'URI':([1,8,12,19,20,29,39,40,41,42,43,77,80,81,82,83,84,86,87,89,90,91,95,97,98,99,100,102,103,104,105,107,109,110,112,114,115,116,118,119,122,124,125,126,127,128,129,130,131,132,134,140,141,142,143,144,145,146,147,148,149,150,151,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,179,180,181,183,184,185,186,187,188,189,191,193,194,195,196,197,198,199,200,201,202,205,207,209,210,211,212,213,214,215,218,219,224,225,226,228,230,235,236,238,239,240,242,],[8,-9,20,-7,-8,-5,-12,8,8,8,-13,-15,8,-42,8,-128,-32,-127,8,8,-5,-31,8,20,8,8,-31,-124,-126,-125,8,8,-57,8,-51,-55,8,-44,-75,-74,-58,-56,8,-36,8,8,-37,8,8,-33,8,8,8,-31,8,-30,8,-123,-131,-130,-129,8,-66,8,8,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,8,8,8,-54,20,8,8,-5,8,-39,8,8,8,-16,-17,-14,-30,-5,-35,8,-68,-76,-52,8,-77,-43,8,-51,-50,-67,-7,-59,-45,8,-41,-31,-46,-38,8,-41,-69,-65,-53,8,8,-40,-5,-64,-61,-60,-34,-62,]),'FLOAT':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,70,-13,-15,70,70,70,70,70,-75,-74,70,70,70,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,70,70,70,70,70,-16,-17,-14,70,-76,70,-77,70,70,]),'NONPOSINT':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,61,-13,-15,61,61,61,61,61,-75,-74,61,61,61,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,61,61,61,61,61,-16,-17,-14,61,-76,61,-77,61,61,]),'DISTINCT':([10,],[13,]),'LKEY':([8,19,20,30,31,41,42,80,81,84,88,89,90,91,98,99,100,109,112,114,116,122,124,125,126,127,128,129,130,131,132,133,134,140,141,142,143,144,145,146,147,148,149,151,170,176,177,179,180,181,183,187,188,189,193,195,198,200,201,202,205,207,209,210,211,212,213,214,215,218,219,224,225,228,230,235,236,238,239,240,242,],[-9,-7,-8,41,42,80,80,98,-42,-32,125,128,-5,-31,140,128,-31,-57,-51,-55,-44,-58,-56,80,-36,128,177,-37,128,128,-33,181,80,140,128,-31,128,-30,128,-123,-131,-130,-129,-66,-54,-5,140,-39,128,215,80,-30,-5,-35,-68,-52,-43,-51,-50,-67,-7,-59,-45,228,-41,-31,-46,-38,140,-41,-69,-65,-53,215,-40,-5,-64,-61,-60,-34,-62,]),'DECIMAL':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,62,-13,-15,62,62,62,62,62,-75,-74,62,62,62,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,62,62,62,62,62,-16,-17,-14,62,-76,62,-77,62,62,]),'NEG':([87,110,115,152,156,157,161,162,164,165,166,169,194,196,197,199,],[115,115,115,115,115,-81,-82,-79,-78,-80,-83,115,-76,115,-77,115,]),'ISURI':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,63,-13,-15,63,63,63,63,63,-75,-74,63,63,63,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,63,63,63,63,63,-16,-17,-14,63,-76,63,-77,63,63,]),'DESC':([29,39,40,43,77,95,184,185,186,],[-5,-12,64,-13,-15,64,-16,-17,-14,]),'UNION':([8,19,20,41,42,80,81,84,89,90,91,98,99,100,109,112,114,116,122,124,125,126,129,130,132,140,141,142,144,145,146,147,148,149,151,170,176,177,179,180,187,188,189,193,195,198,200,201,202,205,207,209,211,212,213,214,215,216,218,219,224,225,230,234,235,236,238,239,240,242,],[-9,-7,-8,-5,-5,-5,-42,-32,127,133,-31,-5,143,-31,-57,-51,-55,-44,-58,-56,-5,-36,-37,127,-33,-5,143,-31,-30,-5,-123,-131,-130,-129,-66,-54,210,-5,-39,127,-30,210,-35,-68,-52,-43,-51,-50,-67,-7,-59,-45,-41,-31,-46,-38,-5,133,-41,-69,-65,-53,-40,133,133,-64,-61,-60,-34,-62,]),'ALL':([10,13,14,15,],[-5,-24,-25,21,]),'ISBLANK':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,66,-13,-15,66,66,66,66,66,-75,-74,66,66,66,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,66,66,66,66,66,-16,-17,-14,66,-76,66,-77,66,66,]),'NONNEGINT':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,52,-13,-15,52,52,52,52,52,-75,-74,52,52,52,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,52,52,52,52,52,-16,-17,-14,52,-76,52,-77,52,52,]),'SAMETERM':([87,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,191,194,196,197,199,226,],[108,108,108,108,-75,-74,108,108,108,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,108,108,108,108,108,108,-76,108,-77,108,108,]),'CONTAINS':([87,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,191,194,196,197,199,226,],[117,117,117,117,-75,-74,117,117,117,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,117,117,117,117,117,117,-76,117,-77,117,117,]),'LESS':([8,20,109,112,114,122,124,151,153,190,193,200,202,203,205,206,207,208,219,224,231,236,238,239,242,],[-9,-8,-57,162,-55,-58,-56,162,162,162,-68,162,162,162,-7,162,-59,162,162,-65,162,-64,-61,-60,-62,]),'GREATER':([8,20,109,112,114,122,124,151,153,190,193,200,202,203,205,206,207,208,219,224,231,236,238,239,242,],[-9,-8,-57,157,-55,-58,-56,157,157,157,-68,157,157,157,-7,157,-59,157,157,-65,157,-64,-61,-60,-62,]),'BY':([18,],[29,]),'MINUS':([8,20,87,107,109,110,112,114,115,118,119,122,124,150,151,152,153,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,190,191,193,194,196,197,199,200,202,203,205,206,207,208,219,224,226,231,236,238,239,242,],[-9,-8,118,118,-57,118,160,-55,118,-75,-74,-58,-56,118,160,118,160,118,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,118,118,118,118,118,160,118,-68,-76,118,-77,118,160,160,160,-7,160,-59,160,160,-65,118,160,-64,-61,-60,-62,]),'EQUALS':([8,20,109,112,114,122,124,151,153,190,193,200,202,203,205,206,207,208,219,224,231,236,238,239,242,],[-9,-8,-57,164,-55,-58,-56,164,164,164,-68,164,164,164,-7,164,-59,164,164,-65,164,-64,-61,-60,-62,]),'AND':([8,20,109,112,114,122,124,151,153,154,170,193,195,200,201,202,205,207,219,221,224,225,236,238,239,242,],[-9,-8,-57,-51,-55,-58,-56,-66,-51,194,-54,-68,-52,-51,-50,-67,-7,-59,-69,194,-65,-53,-64,-61,-60,-62,]),'DATETIME':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,67,-13,-15,67,67,67,67,67,-75,-74,67,67,67,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,67,67,67,67,67,-16,-17,-14,67,-76,67,-77,67,67,]),'STR':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,68,-13,-15,68,68,68,68,68,-75,-74,68,68,68,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,68,68,68,68,68,-16,-17,-14,68,-76,68,-77,68,68,]),'ID':([1,8,12,19,20,29,39,40,41,42,43,77,80,81,82,83,84,86,87,89,90,91,95,97,98,99,100,102,103,104,105,107,109,110,112,114,115,116,118,119,122,124,125,126,127,128,129,130,131,132,134,140,141,142,143,144,145,146,147,148,149,150,151,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,179,180,181,183,184,185,186,187,188,189,191,193,194,195,196,197,198,199,200,201,202,205,207,209,210,211,212,213,214,215,218,219,224,225,226,228,230,235,236,238,239,240,242,],[6,-9,19,-7,-8,-5,-12,69,6,6,-13,-15,6,-42,102,-128,-32,-127,120,6,-5,-31,69,139,6,6,-31,-124,-126,-125,6,120,-57,120,-51,-55,120,-44,-75,-74,-58,-56,6,-36,6,6,-37,6,6,-33,6,6,6,-31,6,-30,6,-123,-131,-130,-129,120,-66,120,120,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,120,120,120,-54,205,120,120,-5,6,-39,6,6,6,-16,-17,-14,-30,-5,-35,120,-68,-76,-52,120,-77,-43,120,-51,-50,-67,-7,-59,-45,6,-41,-31,-46,-38,6,-41,-69,-65,-53,120,6,-40,-5,-64,-61,-60,-34,-62,]),'LONG':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,71,-13,-15,71,71,71,71,71,-75,-74,71,71,71,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,71,71,71,71,71,-16,-17,-14,71,-76,71,-77,71,71,]),'OPTIONAL':([8,19,20,41,42,80,81,84,89,90,91,98,99,100,109,112,114,116,122,124,125,126,127,128,129,130,131,132,134,140,141,142,143,144,145,146,147,148,149,151,170,176,177,179,180,181,183,187,188,189,193,195,198,200,201,202,205,207,209,210,211,212,213,214,215,218,219,224,225,228,230,235,236,238,239,240,242,],[-9,-7,-8,88,88,88,-42,-32,88,-5,-31,88,88,-31,-57,-51,-55,-44,-58,-56,88,-36,88,88,-37,88,88,-33,88,88,88,-31,88,-30,88,-123,-131,-130,-129,-66,-54,-5,88,-39,88,88,88,-30,-5,-35,-68,-52,-43,-51,-50,-67,-7,-59,-45,88,-41,-31,-46,-38,88,-41,-69,-65,-53,88,-40,-5,-64,-61,-60,-34,-62,]),'UNSIGNEDBYTE':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,74,-13,-15,74,74,74,74,74,-75,-74,74,74,74,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,74,74,74,74,74,-16,-17,-14,74,-76,74,-77,74,74,]),'NUMBER':([24,26,87,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,191,194,196,197,199,226,],[33,34,122,122,122,122,-75,-74,122,122,122,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,122,122,122,122,207,122,122,-76,122,-77,122,122,]),'INT':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,48,-13,-15,48,48,48,48,48,-75,-74,48,48,48,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,48,48,48,48,48,-16,-17,-14,48,-76,48,-77,48,48,]),'GREATEREQ':([8,20,109,112,114,122,124,151,153,190,193,200,202,203,205,206,207,208,219,224,231,236,238,239,242,],[-9,-8,-57,161,-55,-58,-56,161,161,161,-68,161,161,161,-7,161,-59,161,161,-65,161,-64,-61,-60,-62,]),'LANG':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,78,-13,-15,78,78,78,78,78,-75,-74,78,78,78,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,78,78,78,78,78,-16,-17,-14,78,-76,78,-77,78,78,]),'ISIRI':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,72,-13,-15,72,72,72,72,72,-75,-74,72,72,72,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,72,72,72,72,72,-16,-17,-14,72,-76,72,-77,72,72,]),'LCASE':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,73,-13,-15,73,73,73,73,73,-75,-74,73,73,73,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,73,73,73,73,73,-16,-17,-14,73,-76,73,-77,73,73,]),'NEQUALS':([8,20,109,112,114,122,124,151,153,190,193,200,202,203,205,206,207,208,219,224,231,236,238,239,242,],[-9,-8,-57,166,-55,-58,-56,166,166,166,-68,166,166,166,-7,166,-59,166,166,-65,166,-64,-61,-60,-62,]),'STRING':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,75,-13,-15,75,75,75,75,75,-75,-74,75,75,75,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,75,75,75,75,75,-16,-17,-14,75,-76,75,-77,75,75,]),'DIV':([8,20,109,112,114,122,124,151,153,190,193,200,202,203,205,206,207,208,219,224,231,236,238,239,242,],[-9,-8,-57,159,-55,-58,-56,159,159,159,-68,159,159,159,-7,159,-59,159,159,-65,159,-64,-61,-60,-62,]),'VARIABLE':([8,10,13,14,15,19,20,22,23,29,32,39,40,41,42,43,77,80,81,82,83,84,86,87,89,90,91,94,95,96,98,99,100,102,103,104,105,107,109,110,112,114,115,116,118,119,122,124,125,126,127,128,129,130,131,132,134,140,141,142,143,144,145,146,147,148,149,150,151,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,174,176,177,179,180,181,183,184,185,186,187,188,189,191,193,194,195,196,197,198,199,200,201,202,205,207,209,210,211,212,213,214,215,218,219,224,225,226,228,230,235,236,238,239,240,242,],[-9,-5,-24,-25,22,-7,-8,-122,32,-5,-121,-12,77,83,83,-13,-15,83,-42,103,-128,-32,-127,124,83,-5,-31,136,77,138,83,83,-31,-124,-126,-125,148,124,-57,124,-51,-55,124,-44,-75,-74,-58,-56,83,-36,83,83,-37,83,83,-33,83,83,83,-31,83,-30,83,-123,-131,-130,-129,124,-66,124,124,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,124,124,124,-54,124,124,-5,83,-39,83,83,83,-16,-17,-14,-30,-5,-35,124,-68,-76,-52,124,-77,-43,124,-51,-50,-67,-7,-59,-45,83,-41,-31,-46,-38,83,-41,-69,-65,-53,124,83,-40,-5,-64,-61,-60,-34,-62,]),'$end':([5,11,16,17,25,27,28,33,34,35,36,37,38,43,77,106,135,184,185,186,],[0,-5,-5,-11,-19,-5,-5,-18,-20,-21,-1,-19,-2,-10,-15,-23,-22,-16,-17,-14,]),'SELECT':([0,2,3,4,7,8,9,19,20,],[-5,-5,10,-4,-6,-9,-3,-7,-8,]),'BOOLEAN':([29,39,40,43,77,87,95,107,110,115,118,119,150,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,174,184,185,186,191,194,196,197,199,226,],[-5,-12,79,-13,-15,79,79,79,79,79,-75,-74,79,79,79,-81,-72,-73,-71,-82,-79,-70,-78,-80,-83,79,79,79,79,79,-16,-17,-14,79,-76,79,-77,79,79,]),'COLON':([6,69,102,120,],[12,97,12,171,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'RELOP':([112,151,153,190,200,202,203,206,208,219,231,],[156,191,156,191,156,191,191,191,191,191,191,]),'desc_var':([40,95,],[43,137,]),'triple':([41,42,80,89,98,99,125,127,128,130,131,134,140,141,143,145,177,180,181,183,210,215,228,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'var_order_list':([29,],[40,]),'order_by':([11,],[16,]),'subject':([41,42,80,89,98,99,125,127,128,130,131,134,140,141,143,145,177,180,181,183,210,215,228,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'pjoin_block':([41,42,80,98,125,134,140,177,183,215,],[90,90,90,90,90,182,90,90,217,90,]),'rest_union_block':([90,176,188,216,234,235,],[134,211,218,229,229,240,]),'pattern_arg':([227,237,],[233,241,]),'group_graph_pattern':([41,42,125,],[85,93,175,]),'empty':([0,2,10,11,16,27,28,29,41,42,80,89,90,98,99,125,130,134,140,141,145,176,177,180,183,188,215,216,234,235,],[4,4,14,17,25,35,37,39,84,84,84,129,132,84,129,84,129,84,84,129,129,132,84,129,84,132,84,132,132,132,]),'prefix_list':([0,2,],[3,9,]),'bgp':([41,42,80,89,98,99,125,127,128,130,131,134,140,141,143,145,177,180,181,183,210,215,228,],[89,89,99,130,141,130,89,176,141,130,180,89,141,130,188,130,141,130,89,89,176,141,99,]),'query':([3,],[11,]),'predicate':([82,],[105,]),'rest_join_block':([89,99,130,141,145,180,],[126,126,179,126,189,214,]),'express_rel':([87,110,115,152,156,169,196,199,],[116,154,170,154,201,154,221,223,]),'prefix':([0,2,],[2,2,]),'binary_func':([87,107,110,115,150,152,156,167,168,169,172,174,191,196,199,226,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'var_list':([15,],[23,]),'ARITOP':([112,151,153,190,200,202,203,206,208,219,231,],[167,167,167,167,167,167,167,167,167,167,167,]),'LOGOP':([154,221,],[196,196,]),'limit':([16,28,],[27,38,]),'parse_sparql':([0,],[5,]),'object':([105,],[146,]),'express_arg':([87,107,110,115,150,152,156,167,168,169,172,174,191,196,199,226,],[112,151,153,112,190,153,200,202,203,153,206,208,219,112,153,231,]),'offset':([16,27,],[28,36,]),'UNARYOP':([87,107,110,115,150,152,156,167,168,169,172,174,191,196,199,226,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'regex_flag':([233,],[239,]),'unary_func':([40,87,95,107,110,115,150,152,156,167,168,169,172,174,191,196,199,226,],[59,113,59,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'join_block':([41,42,80,98,125,128,134,140,177,181,183,215,228,],[91,91,100,142,91,178,91,142,212,216,91,212,234,]),'uri':([1,40,41,42,80,82,87,89,95,98,99,105,107,110,115,125,127,128,130,131,134,140,141,143,145,150,152,156,167,168,169,172,174,177,180,181,183,191,196,199,210,215,226,228,],[7,60,86,86,86,104,114,86,60,86,86,149,114,114,114,86,86,86,86,86,86,86,86,86,86,114,114,114,114,114,114,114,114,86,86,86,86,114,114,114,86,86,114,86,]),'expression':([110,152,169,196,],[155,192,204,222,]),'distinct':([10,],[15,]),'union_block':([41,42,80,98,125,140,177,215,],[92,92,101,101,92,101,101,101,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> parse_sparql","S'",1,None,None,None),
  ('parse_sparql -> prefix_list query order_by limit offset','parse_sparql',5,'p_parse_sparql_0','queryParser.py',162),
  ('parse_sparql -> prefix_list query order_by offset limit','parse_sparql',5,'p_parse_sparql_1','queryParser.py',169),
  ('prefix_list -> prefix prefix_list','prefix_list',2,'p_prefix_list','queryParser.py',176),
  ('prefix_list -> empty','prefix_list',1,'p_empty_prefix_list','queryParser.py',182),
  ('empty -> <empty>','empty',0,'p_empty','queryParser.py',188),
  ('prefix -> PREFIX uri','prefix',2,'p_prefix','queryParser.py',194),
  ('uri -> ID COLON ID','uri',3,'p_uri_0','queryParser.py',200),
  ('uri -> ID COLON URI','uri',3,'p_uri_1','queryParser.py',206),
  ('uri -> URI','uri',1,'p_uri_2','queryParser.py',212),
  ('order_by -> ORDER BY var_order_list desc_var','order_by',4,'p_order_by_0','queryParser.py',218),
  ('order_by -> empty','order_by',1,'p_order_by_1','queryParser.py',224),
  ('var_order_list -> empty','var_order_list',1,'p_var_order_list_0','queryParser.py',230),
  ('var_order_list -> var_order_list desc_var','var_order_list',2,'p_var_order_list_1','queryParser.py',236),
  ('desc_var -> DESC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_0','queryParser.py',242),
  ('desc_var -> VARIABLE','desc_var',1,'p_desc_var_1','queryParser.py',248),
  ('desc_var -> ASC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_2','queryParser.py',254),
  ('desc_var -> unary_func LPAR desc_var RPAR','desc_var',4,'p_desc_var_3','queryParser.py',260),
  ('limit -> LIMIT NUMBER','limit',2,'p_limit_0','queryParser.py',266),
  ('limit -> empty','limit',1,'p_limit_1','queryParser.py',272),
  ('offset -> OFFSET NUMBER','offset',2,'p_offset_0','queryParser.py',278),
  ('offset -> empty','offset',1,'p_offset_1','queryParser.py',284),
  ('query -> SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_0','queryParser.py',290),
  ('query -> SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_1','queryParser.py',296),
  ('distinct -> DISTINCT','distinct',1,'p_distinct_0','queryParser.py',302),
  ('distinct -> empty','distinct',1,'p_distinct_1','queryParser.py',308),
  ('group_graph_pattern -> union_block','group_graph_pattern',1,'p_ggp_0','queryParser.py',314),
  ('union_block -> pjoin_block rest_union_block POINT pjoin_block','union_block',4,'p_union_block_0','queryParser.py',320),
  ('union_block -> pjoin_block rest_union_block pjoin_block','union_block',3,'p_union_block_1','queryParser.py',328),
  ('union_block -> pjoin_block rest_union_block','union_block',2,'p_union_block_2','queryParser.py',339),
  ('pjoin_block -> LKEY join_block RKEY','pjoin_block',3,'p_ppjoin_block_0','queryParser.py',345),
  ('pjoin_block -> join_block','pjoin_block',1,'p_ppjoin_block_1','queryParser.py',351),
  ('pjoin_block -> empty','pjoin_block',1,'p_ppjoin_block_2','queryParser.py',357),
  ('rest_union_block -> empty','rest_union_block',1,'p_rest_union_block_0','queryParser.py',363),
  ('rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block','rest_union_block',6,'p_rest_union_block_1','queryParser.py',369),
  ('join_block -> LKEY union_block RKEY rest_join_block','join_block',4,'p_join_block_0','queryParser.py',376),
  ('join_block -> bgp rest_join_block','join_block',2,'p_join_block_1','queryParser.py',387),
  ('rest_join_block -> empty','rest_join_block',1,'p_rest_join_block_0','queryParser.py',393),
  ('rest_join_block -> POINT bgp rest_join_block','rest_join_block',3,'p_rest_join_block_1','queryParser.py',399),
  ('rest_join_block -> bgp rest_join_block','rest_join_block',2,'p_rest_join_block_2','queryParser.py',405),
  ('bgp -> LKEY bgp UNION bgp rest_union_block RKEY','bgp',6,'p_bgp_0','queryParser.py',411),
  ('bgp -> bgp UNION bgp rest_union_block','bgp',4,'p_bgp_01','queryParser.py',418),
  ('bgp -> triple','bgp',1,'p_bgp_1','queryParser.py',426),
  ('bgp -> FILTER LPAR expression RPAR','bgp',4,'p_bgp_2','queryParser.py',432),
  ('bgp -> FILTER express_rel','bgp',2,'p_bgp_3','queryParser.py',438),
  ('bgp -> OPTIONAL LKEY group_graph_pattern RKEY','bgp',4,'p_bgp_4','queryParser.py',444),
  ('bgp -> LKEY join_block RKEY','bgp',3,'p_bgp_6','queryParser.py',457),
  ('expression -> express_rel LOGOP expression','expression',3,'p_expression_0','queryParser.py',466),
  ('expression -> express_rel','expression',1,'p_expression_1','queryParser.py',472),
  ('expression -> LPAR expression RPAR','expression',3,'p_expression_2','queryParser.py',478),
  ('express_rel -> express_arg RELOP express_rel','express_rel',3,'p_express_rel_0','queryParser.py',484),
  ('express_rel -> express_arg','express_rel',1,'p_express_rel_1','queryParser.py',490),
  ('express_rel -> LPAR express_rel RPAR','express_rel',3,'p_express_rel_2','queryParser.py',496),
  ('express_rel -> NEG LPAR expression RPAR','express_rel',4,'p_express_rel_3','queryParser.py',502),
  ('express_rel -> NEG express_rel','express_rel',2,'p_express_rel_4','queryParser.py',508),
  ('express_arg -> uri','express_arg',1,'p_express_arg_0','queryParser.py',515),
  ('express_arg -> VARIABLE','express_arg',1,'p_express_arg_1','queryParser.py',521),
  ('express_arg -> CONSTANT','express_arg',1,'p_express_arg_2','queryParser.py',527),
  ('express_arg -> NUMBER','express_arg',1,'p_express_arg_3','queryParser.py',538),
  ('express_arg -> NUMBER POINT NUMBER','express_arg',3,'p_express_arg_03','queryParser.py',544),
  ('express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag','express_arg',6,'p_express_arg_4','queryParser.py',552),
  ('regex_flag -> RPAR','regex_flag',1,'p_regex_flags_0','queryParser.py',558),
  ('regex_flag -> COMA pattern_arg RPAR','regex_flag',3,'p_regex_flags_1','queryParser.py',564),
  ('pattern_arg -> CONSTANT','pattern_arg',1,'p_pattern_arg_0','queryParser.py',570),
  ('express_arg -> binary_func LPAR express_arg COMA express_arg RPAR','express_arg',6,'p_express_arg_5','queryParser.py',577),
  ('express_arg -> unary_func LPAR express_arg RPAR','express_arg',4,'p_express_arg_6','queryParser.py',583),
  ('express_arg -> UNARYOP express_arg','express_arg',2,'p_express_arg_7','queryParser.py',589),
  ('express_arg -> express_arg ARITOP express_arg','express_arg',3,'p_express_arg_8','queryParser.py',596),
  ('express_arg -> LPAR express_arg RPAR','express_arg',3,'p_express_arg_9','queryParser.py',602),
  ('express_arg -> express_arg RELOP express_arg','express_arg',3,'p_express_arg_10','queryParser.py',608),
  ('ARITOP -> PLUS','ARITOP',1,'p_arit_op_0','queryParser.py',614),
  ('ARITOP -> MINUS','ARITOP',1,'p_arit_op_1','queryParser.py',620),
  ('ARITOP -> TIMES','ARITOP',1,'p_arit_op_2','queryParser.py',626),
  ('ARITOP -> DIV','ARITOP',1,'p_arit_op_3','queryParser.py',632),
  ('UNARYOP -> PLUS','UNARYOP',1,'p_unaryarit_op_1','queryParser.py',638),
  ('UNARYOP -> MINUS','UNARYOP',1,'p_unaryarit_op_2','queryParser.py',644),
  ('LOGOP -> AND','LOGOP',1,'p_logical_op_0','queryParser.py',650),
  ('LOGOP -> OR','LOGOP',1,'p_logical_op_1','queryParser.py',656),
  ('RELOP -> EQUALS','RELOP',1,'p_relational_op_0','queryParser.py',662),
  ('RELOP -> LESS','RELOP',1,'p_relational_op_1','queryParser.py',668),
  ('RELOP -> LESSEQ','RELOP',1,'p_relational_op_2','queryParser.py',674),
  ('RELOP -> GREATER','RELOP',1,'p_relational_op_3','queryParser.py',680),
  ('RELOP -> GREATEREQ','RELOP',1,'p_relational_op_4','queryParser.py',686),
  ('RELOP -> NEQUALS','RELOP',1,'p_relational_op_5','queryParser.py',692),
  ('binary_func -> REGEX','binary_func',1,'p_binary_0','queryParser.py',698),
  ('binary_func -> SAMETERM','binary_func',1,'p_binary_1','queryParser.py',704),
  ('binary_func -> LANGMATCHES','binary_func',1,'p_binary_2','queryParser.py',710),
  ('binary_func -> CONSTANT','binary_func',1,'p_binary_3','queryParser.py',716),
  ('binary_func -> CONTAINS','binary_func',1,'p_binary_4','queryParser.py',722),
  ('unary_func -> BOUND','unary_func',1,'p_unary_0','queryParser.py',728),
  ('unary_func -> ISIRI','unary_func',1,'p_unary_1','queryParser.py',734),
  ('unary_func -> ISURI','unary_func',1,'p_unary_2','queryParser.py',740),
  ('unary_func -> ISBLANK','unary_func',1,'p_unary_3','queryParser.py',746),
  ('unary_func -> ISLITERAL','unary_func',1,'p_unary_4','queryParser.py',752),
  ('unary_func -> LANG','unary_func',1,'p_unary_5','queryParser.py',758),
  ('unary_func -> DATATYPE','unary_func',1,'p_unary_6','queryParser.py',764),
  ('unary_func -> STR','unary_func',1,'p_unary_7','queryParser.py',770),
  ('unary_func -> UPPERCASE','unary_func',1,'p_unary_8','queryParser.py',776),
  ('unary_func -> DOUBLE','unary_func',1,'p_unary_9','queryParser.py',782),
  ('unary_func -> INTEGER','unary_func',1,'p_unary_9','queryParser.py',783),
  ('unary_func -> DECIMAL','unary_func',1,'p_unary_9','queryParser.py',784),
  ('unary_func -> FLOAT','unary_func',1,'p_unary_9','queryParser.py',785),
  ('unary_func -> STRING','unary_func',1,'p_unary_9','queryParser.py',786),
  ('unary_func -> BOOLEAN','unary_func',1,'p_unary_9','queryParser.py',787),
  ('unary_func -> DATETIME','unary_func',1,'p_unary_9','queryParser.py',788),
  ('unary_func -> NONPOSINT','unary_func',1,'p_unary_9','queryParser.py',789),
  ('unary_func -> NEGATIVEINT','unary_func',1,'p_unary_9','queryParser.py',790),
  ('unary_func -> LONG','unary_func',1,'p_unary_9','queryParser.py',791),
  ('unary_func -> INT','unary_func',1,'p_unary_9','queryParser.py',792),
  ('unary_func -> SHORT','unary_func',1,'p_unary_9','queryParser.py',793),
  ('unary_func -> BYTE','unary_func',1,'p_unary_9','queryParser.py',794),
  ('unary_func -> NONNEGINT','unary_func',1,'p_unary_9','queryParser.py',795),
  ('unary_func -> UNSIGNEDLONG','unary_func',1,'p_unary_9','queryParser.py',796),
  ('unary_func -> UNSIGNEDINT','unary_func',1,'p_unary_9','queryParser.py',797),
  ('unary_func -> UNSIGNEDSHORT','unary_func',1,'p_unary_9','queryParser.py',798),
  ('unary_func -> UNSIGNEDBYTE','unary_func',1,'p_unary_9','queryParser.py',799),
  ('unary_func -> POSITIVEINT','unary_func',1,'p_unary_9','queryParser.py',800),
  ('unary_func -> ID COLON ID','unary_func',3,'p_unary_10','queryParser.py',806),
  ('unary_func -> uri','unary_func',1,'p_unary_11','queryParser.py',812),
  ('unary_func -> UCASE','unary_func',1,'p_unary_12','queryParser.py',818),
  ('unary_func -> LCASE','unary_func',1,'p_unary_13','queryParser.py',824),
  ('var_list -> var_list VARIABLE','var_list',2,'p_var_list','queryParser.py',830),
  ('var_list -> VARIABLE','var_list',1,'p_single_var_list','queryParser.py',836),
  ('triple -> subject predicate object','triple',3,'p_triple_0','queryParser.py',842),
  ('predicate -> ID','predicate',1,'p_predicate_rdftype','queryParser.py',848),
  ('predicate -> uri','predicate',1,'p_predicate_uri','queryParser.py',861),
  ('predicate -> VARIABLE','predicate',1,'p_predicate_var','queryParser.py',867),
  ('subject -> uri','subject',1,'p_subject_uri','queryParser.py',874),
  ('subject -> VARIABLE','subject',1,'p_subject_variable','queryParser.py',880),
  ('object -> uri','object',1,'p_object_uri','queryParser.py',886),
  ('object -> VARIABLE','object',1,'p_object_variable','queryParser.py',892),
  ('object -> CONSTANT','object',1,'p_object_constant','queryParser.py',898),
]
